{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthStat = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthStat,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    authentication: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggle","initialAuthStat","isAuthenticated","authSlice","login","logout","store","reducer","authentication","counterActions","actions","authActions"],"sources":["/Users/khawarzaman/Documents/react/React/redx/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialCounterState = { counter: 0, showCounter: true};\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState: initialCounterState,\n    reducers: {\n        increment(state){\n            state.counter++;\n        },\n        decrement(state){\n            state.counter--;\n        },\n        increase(state, action){\n            state.counter = state.counter + action.payload;\n        },\n        toggle(state){\n            state.showCounter = !state.showCounter;\n        }\n    }\n})\nconst initialAuthStat = { isAuthenticated : false}\nconst authSlice = createSlice({\n name: 'authentication',\n initialState: initialAuthStat,\n reducers: {\n    login(state){\n        state.isAuthenticated = true;\n    },\n    logout(state){\n        state.isAuthenticated = false;\n    }\n }\n})\nconst store = configureStore({\n    reducer: { counter: counterSlice.reducer, authentication: authSlice.reducer}\n}); \nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAI,CAAC;AAE5D,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAC;MACnBH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAC;MACTA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;AACF,MAAMY,eAAe,GAAG;EAAEC,eAAe,EAAG;AAAK,CAAC;AAClD,MAAMC,SAAS,GAAGlB,WAAW,CAAC;EAC7BM,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAES,eAAe;EAC7BR,QAAQ,EAAE;IACPW,KAAKA,CAACT,KAAK,EAAC;MACRA,KAAK,CAACO,eAAe,GAAG,IAAI;IAChC,CAAC;IACDG,MAAMA,CAACV,KAAK,EAAC;MACTA,KAAK,CAACO,eAAe,GAAG,KAAK;IACjC;EACH;AACD,CAAC,CAAC;AACF,MAAMI,KAAK,GAAGpB,cAAc,CAAC;EACzBqB,OAAO,EAAE;IAAEnB,OAAO,EAAEE,YAAY,CAACiB,OAAO;IAAEC,cAAc,EAAEL,SAAS,CAACI;EAAO;AAC/E,CAAC,CAAC;AACF,OAAO,MAAME,cAAc,GAAGnB,YAAY,CAACoB,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAAO;AAC5C,eAAeJ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}